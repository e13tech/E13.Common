trigger: none

pr:
  branches:
    include:
      - main

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-20.04'
    #mac:
    #  imageName: 'macOS-latest'
    #windows:
    #  imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

# This name is also the build_number
name: $(date:yyyy).$(DayOfYear).$(rev:r)

steps:
- checkout: self
  persistCredentials: true

- task: Bash@3
  condition: eq( variables['Agent.OS'], 'Darwin' )
  inputs:
    targetType: 'inline'
    script: |
      brew install mono-libgdiplus
    failOnStderr: true

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 5.x'
  inputs:
    version: 5.x
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: dotnetcore Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: dotnetcore Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: dotnetcore Test
  enabled: false
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--no-build --configuration Release --collect:"Code Coverage"'
    
- task: Pulumi@1
  displayName: pulumi up
  name: pulumi_up
  env:
    PULUMI_ACCESS_TOKEN: $(pulumi.access.token)
    PULUMI_CONFIG_PASSPHRASE: $(pulumi.config.passphrase)
  inputs:
    azureSubscription: 'JJ MPN'
    command: 'up'
    args: '--yes'
    cwd: './infra'
    stack: 'test'
    
- script: |
    echo "##vso[task.setvariable variable=AutoDisabledUser;isOutput=true]$(pulumi stack output AutoDisabledUser)"
    echo "##vso[task.setvariable variable=AutoEnabledUser;isOutput=true]$(pulumi stack output AutoEnabledUser)"
    echo "##vso[task.setvariable variable=AutoUserPasswords;isOutput=true]$(pulumi stack output AutoUserPasswords)"
    echo "##vso[task.setvariable variable=TestClientId;isOutput=true]$(pulumi stack output TestClientId)"
  displayName: 'Set stack outputs as variables'
  name: 'pulumi_vars'

- task: DotNetCoreCLI@2
  env:
    InMemory: true
    TokenForAAD_TestUser:  $(AutoEnabledUser)
    TokenForAAD_DisabledUser:  $(AutoDisabledUser)
    TokenForAAD_TestPass:  $(AutoUserPasswords)
    TestClientId:  $(TestClientId)
  displayName: dotnetcore Integration Test
  condition: succeeded()
  enabled: true
  inputs:
    command: test
    projects: '**/*[Tt]estsInt/*.csproj'
    arguments: '--no-build --configuration Release --collect:"Code Coverage"'

- task: Pulumi@1
  displayName: pulumi destroy
  condition: succeededOrFailed()
  env:
    PULUMI_ACCESS_TOKEN: $(pulumi.access.token)
    PULUMI_CONFIG_PASSPHRASE: $(pulumi.config.passphrase)
  inputs:
    azureSubscription: 'JJ MPN'
    command: 'destroy'
    args: '--yes'
    cwd: './infra'
    stack: 'test'