trigger: none

pr:
  branches:
    include:
      - main

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-20.04'
    mac:
      imageName: 'macOS-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

# This name is also the build_number
name: $(date:yyyy).$(DayOfYear).$(rev:r)

steps:
- checkout: self
  persistCredentials: true

- task: Bash@3
  condition: eq( variables['Agent.OS'], 'Darwin' )
  inputs:
    targetType: 'inline'
    script: |
      brew install mono-libgdiplus
    failOnStderr: true

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 7.x'
  inputs:
    version: 7.x
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: dotnetcore Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: dotnetcore Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: dotnetcore Test
  enabled: true
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--no-build --configuration Release --collect:"Code Coverage"'

- task: DotNetCoreCLI@2
  env:
    InMemory: true
  displayName: dotnetcore Integration Test
  condition: succeededOrFailed()
  enabled: false
  inputs:
    command: test
    projects: '**/*[Tt]estsInt/*.csproj'
    arguments: '--no-build --configuration Release --collect:"Code Coverage"'

